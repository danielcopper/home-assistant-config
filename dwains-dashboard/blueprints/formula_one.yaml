blueprint:
  name: Formula One
  description: Formula One page by LRvdLinden
  version: '1.0'
  type: page
  custom_cards:
  - button-card
card:
  type: custom:dwains-flexbox-card
  items_classes: col-xs-12
  cards:
  - type: vertical-stack
    item_classes: col-xs-12 col-sm-5
    cards:
    - type: markdown
      content: '![Image](https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/F1.svg/1280px-F1.svg.png)

        '
    - type: markdown
      card_mod: null
      style:
        ha-markdown$: "* {\n  font-family: FormulaOne, \"Titillium Web\";\n}\n"
      content: "{% set f1 = states.sensor.formula_one_sensor.attributes.next_race\
        \ %} {% if not(f1 == None) %}  <h1><img height=\"22\" src=\"https://www.countries-ofthe-world.com/flags-normal/flag-of-{{f1.Circuit.Location.country.replace(\"\
        \ \", \"-\")}}.png\">&nbsp; {{ f1.raceName }}</h1> {{f1.Circuit.circuitName}}\
        \ {% endif %} | <small>{{ as_timestamp(f1.date + ' ' + f1.time) | timestamp_custom(\"\
        Race start %d-%m-%Y om %H:%M uur\") }}</small>&nbsp;&nbsp;\n<a target=\"_new\"\
        \ href=\"{{f1.Circuit.url}}\">\n  <img width=\"100%\" src=\"https://www.formula1.com/content/dam/fom-website/2018-redesign-assets/Circuit%20maps%2016x9/{{f1.Circuit.Location.country.replace(\"\
        \ \", \"_\")}}_Circuit.png.transform/9col/image.png\">\n</a>"
  - type: vertical-stack
    item_classes: col-xs-12 col-sm-7
    cards:
    - type: custom:state-switch
      entity: hash
      default: race
      states:
        race:
          type: vertical-stack
          cards:
          - type: custom:dwains-flexbox-card
            padding: true
            cards:
            - type: horizontal-stack
              cards:
              - type: custom:button-card
                name: Race
                styles:
                  card:
                  - height: 30px
                  - width: 125px
                  name:
                  - color: var(--dwains-theme-accent)
                  - font-weight: bold
                  - font-size: 16px
                tap_action:
                  action: navigate
                  navigation_path: '#race'
              - type: custom:button-card
                name: Stands
                styles:
                  card:
                  - height: 30px
                  - width: 125px
                  name:
                  - color: var(--dwains-theme-grey)
                  - font-weight: bold
                  - font-size: 16px
                tap_action:
                  action: navigate
                  navigation_path: '#stands'
          - type: custom:atomic-calendar-revive
            showProgressBar: true
            maxDaysToShow: 30
            maxEventCount: 5
            europeanDate: true
            showNoEventsForToday: true
            showMonth: true
            showWeekDay: true
            hideFinishedEvents: true
            entities:
            - calendar.formula_1_calendar_by_racefans_net
        stands:
          type: vertical-stack
          cards:
          - type: custom:dwains-flexbox-card
            padding: true
            cards:
            - type: horizontal-stack
              cards:
              - type: custom:button-card
                name: Race
                styles:
                  card:
                  - height: 30px
                  - width: 125px
                  name:
                  - color: var(--dwains-theme-grey)
                  - font-weight: bold
                  - font-size: 16px
                tap_action:
                  action: navigate
                  navigation_path: '#race'
              - type: custom:button-card
                name: Stands
                styles:
                  card:
                  - height: 30px
                  - width: 125px
                  name:
                  - color: var(--dwains-theme-accent)
                  - font-weight: bold
                  - font-size: 16px
                tap_action:
                  action: navigate
                  navigation_path: '#stands'
          - type: markdown
            card_mod:
              style:
                ha-markdown$: "table {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse:\
                  \ separate;\n}\nth {\n    color: white;\n    background: rgb(41,\
                  \ 158, 194);\n}\ntr:nth-child(even) {\n  background-color: var(--primary-background-color);\n\
                  \  color: rgb(41, 158, 194);\n}\ntd:nth-child(1) {\n  width: 50px;\n\
                  \  text-align: center;\n}\ntd:nth-child(2) {\n  width: 50px;\n \
                  \ text-align: center;\n}\ntd:nth-child(4) {\n  width: 60px;\n  text-align:\
                  \ center;\n}\n"
            content: "<table>\n  <thead>\n    <tr>\n      <th>&nbsp;</th>\n      <th\
              \ colspan=\"2\">Drivers</th>\n      <th class=\"center\">Pts</th>\n\
              \    </tr>\n  </thead>\n  <tbody>\n{% for driver in states.sensor.formula_one_sensor.attributes.drivers\
              \ %} <tr>\n        <td>{{driver.position}}</td>\n        <td>{{driver.Driver.code}}</td>\n\
              \        <td>{{driver.Driver.givenName }} {{driver.Driver.familyName\
              \ }}</td>\n        <td>{{driver.points}}</td>\n    </tr>\n{% endfor\
              \ %}\n  </tbody>\n</table>"
          - type: markdown
            card_mod:
              style:
                ha-markdown$: "table {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse:\
                  \ separate;\n}\nth {\n    color: white;\n    background: rgb(41,\
                  \ 158, 194);\n}\ntr:nth-child(even) {\n  background-color: var(--primary-background-color);\n\
                  \  color: rgb(41, 158, 194);\n}\ntd:nth-child(1) {\n  width: 50px;\n\
                  \  text-align: center;\n}\ntd:nth-child(2) {\n  text-align: left;\n\
                  }\ntd:nth-child(3) {\n  width: 60px;\n  text-align: center;\n}\n"
            content: "<table>\n  <thead>\n    <tr>\n      <th>&nbsp;</th>\n      <th>Constructor</th>\n\
              \      <th class=\"center\">Pts</th>\n    </tr>\n  </thead>\n  <tbody>\n\
              {% for driver in states.sensor.formula_one_sensor.attributes.constructors\
              \ %} <tr>\n        <td>{{driver.position}}</td>\n        <td>{{driver.Constructor.name\
              \ }}</td>\n        <td>{{driver.points}}</td>\n    </tr>\n{% endfor\
              \ %}\n  </tbody>\n</table>"
