"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaults = exports.nodeName = exports.DurationUnit = exports.STATE = exports.TIMER_TYPE = void 0;
var TIMER_TYPE;
(function (TIMER_TYPE) {
    TIMER_TYPE["LOOP"] = "loop";
    TIMER_TYPE["DELAY"] = "delay";
})(TIMER_TYPE = exports.TIMER_TYPE || (exports.TIMER_TYPE = {}));
var STATE;
(function (STATE) {
    STATE["IDLE"] = "IDLE";
    STATE["RUNNING"] = "RUNNING";
    STATE["STOPPED"] = "STOPPED";
    STATE["PAUSED"] = "PAUSED";
})(STATE = exports.STATE || (exports.STATE = {}));
var DurationUnit;
(function (DurationUnit) {
    DurationUnit["MILLISECOND"] = "millisecond";
    DurationUnit["SECOND"] = "second";
    DurationUnit["MINUTE"] = "minute";
    DurationUnit["HOUR"] = "hour";
})(DurationUnit = exports.DurationUnit || (exports.DurationUnit = {}));
exports.nodeName = 'controltimer';
exports.defaults = {
    name: '',
    timerType: TIMER_TYPE.DELAY,
    timerDurationUnit: DurationUnit.SECOND,
    timerDurationType: 'num',
    timerDuration: '5',
    timerLoopTimeoutUnit: DurationUnit.SECOND,
    timerLoopTimeoutType: 'num',
    timerLoopTimeout: '0',
    loopTimeoutMessageType: 'str',
    loopTimeoutMessage: 'LOOP_TIMEOUT',
    timerMaxLoopIterationsType: 'num',
    timerMaxLoopIterations: '0',
    loopMaxIterationsMessageType: 'str',
    loopMaxIterationsMessage: 'MAX_LOOP_ITERATIONS',
    isConsecutiveStartActionTimerResetAllowed: false,
    isRunningTimerProgressVisible: false,
    outputReceivedMessageOnTimerTrigger: true,
    outputReceivedMessageOnTimerHalt: true,
    startTimerOnReceivalOfUnknownMessage: false,
    resetTimerOnReceivalOfUnknownMessage: false,
    isDebugModeEnabled: false,
    timerTriggeredMessageType: 'str',
    timerTriggeredMessage: 'TIMER_TRIGGERED',
    timerHaltedMessageType: 'str',
    timerHaltedMessage: 'TIMER_HALTED',
    isStartActionEnabled: true,
    isStopActionEnabled: true,
    isResetActionEnabled: true,
    isPauseActionEnabled: true,
    isContinueActionEnabled: true,
    actionPropertyNameType: 'str',
    actionPropertyName: 'payload',
    startActionNameType: 'str',
    startActionName: 'START',
    stopActionNameType: 'str',
    stopActionName: 'STOP',
    resetActionNameType: 'str',
    resetActionName: 'RESET',
    pauseActionNameType: 'str',
    pauseActionName: 'PAUSE',
    continueActionNameType: 'str',
    continueActionName: 'CONTINUE',
};
