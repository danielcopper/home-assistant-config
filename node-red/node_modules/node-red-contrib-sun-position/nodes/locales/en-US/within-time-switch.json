{
    "within-time-switch": {
        "label": {
            "addTimes": "alternate start or end time",
            "propertyStart": "Alt. Start on",
            "propertyStartThreshold": "Threshold",
            "startTime": "Start time",
            "startTimeAlt": "Start time",
            "propertyEnd": "Alt. End on",
            "propertyEndThreshold": "Threshold",
            "endTime": "End time",
            "endTimeAlt": "End time",
            "startOffset": "Offset",
            "startOffsetAlt": "Offset",
            "endOffset": "Offset",
            "endOffsetAlt": "Offset",
            "statusOut": "Status",
            "statusNone": "none",
            "statusOnlyError": "only errors",
            "statusSend": "last message",
            "statusTime": "time limits",
            "statusTimeOrSend": "time limits or last message",
            "lastMsgOnStartOut": "resend start",
            "lastMsgOnStartOutTxt": "next start additionally emit the last message arrived out of time",
            "lastMsgOnEndOut": "resend end",
            "lastMsgOnEndOutTxt": "next end additionally emit the last message arrived in time",
            "compareTime":"base time",
            "now":"date.now",
            "msgts":"msg.ts",
            "msglc":"msg.lc",
            "msgtime":"msg.time",
            "msgvalue":"msg.value",
            "showEnhSettings":"Enhanced settings",
            "timeRestrictions":"limit time",
            "internally":"ðŸ‘‡ is defined here",
            "withinTimeValue": "in time payload",
            "outOfTimeValue": "out of time payload"
        },
        "placeholder": {
            "propertyStart": "Property for alternate start time",
            "propertyStartThreshold": "threshold",
            "propertyEnd": "Property for alternate end time",
            "propertyEndThreshold": "threshold",
            "startTime": "start time, e.g. 7:40",
            "startOffset": "0",
            "endTime": "end time, e.g. 18:15",
            "endOffset": "0",
            "startTimeAlt": "alternate start time, e.g. 7:40",
            "startOffsetAlt": "0",
            "endTimeAlt": "alternate end time, e.g. 18:15",
            "endOffsetAlt": "0",
            "timeLimits":"select days and or month wherefore it should be valid"
        },
        "tips": {
            "addTimes": "Here can be defined alternate times for start/end. If the given property is true the alternate start/end times will be used instead the normal ones. This can be used to have different start/end times for holidays or other special days.",
            "documentation": "<a href=\"https://github.com/rdmtc/node-red-contrib-sun-position/wiki/within-time\">Documentation and examples</a>",
            "outputValue":"Here can be defined the payload of the output 1 if the input message arrived within time or the payload of the message of output 2 if the message arrives out of the time."
        },
       "errors": {
            "error-start-time": "Error get start time: __message__",
            "error-end-time": "Error get end time: __message__",
            "invalid-propertyStart-type": "Invalid Property Type for alternate start: __type__",
            "invalid-propertyEnd-type": "Invalid Property Type for alternate end: __type__",
            "invalid-day": "Day is not selected.",
            "invalid-month": "Month is not selected.",
            "invalid-daterange": "Day is not in valid range.",
            "only-odd-day": "Not an odd Day!",
            "only-even-day": "Not an even Day!",
            "only-odd-week": "Not an odd Week!",
            "only-even-week": "Not an even Week!"
        }
    }
}